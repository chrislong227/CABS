function [result ] = convdiag(nobs, nu_unique, nbeta,...
                                     nseg_tcurr,nseg_ucurr,...
                                     nexp_tcurr, nexp_ucurr,...
                                     beta_curr, tausq_curr)
%Calculate convergence diagnostics for beta and tau sq parameters
%   Get max eigenvalue of beta and tausq matrices across time and covariate
    idxt=cumsum(nseg_tcurr); 
    idxu=cumsum(nseg_ucurr);    
    tausq_conv=zeros(nobs,nu_unique);
    beta_conv=zeros(nobs,nu_unique,nbeta);

    for i=1:nexp_tcurr
        for j=1:nexp_ucurr
            if i==1 && j==1
                tausq_conv(1:idxt(i),1:idxu(j))=...
                    repmat(tausq_curr(i,j),...
                        nseg_tcurr(i),...
                        nseg_ucurr(j));
                for k=1:nbeta
                     beta_conv(1:idxt(i),1:idxu(j),k)=...
                        repmat(beta_curr(k,i,j),...
                            nseg_tcurr(i),...
                            nseg_ucurr(j),1);
                end                 
            elseif i==1
                tausq_conv(1:idxt(i),(idxu(j-1)+1):idxu(j))=...
                     repmat(tausq_curr(i,j),...
                            nseg_tcurr(i),...
                            nseg_ucurr(j));
                for k=1:nbeta
                     beta_conv(1:idxt(i),(idxu(j-1)+1):idxu(j),k)=...
                        repmat(beta_curr(k,i,j),...
                            nseg_tcurr(i),...
                            nseg_ucurr(j),1);
                end                    
            elseif j==1
                tausq_conv((idxt(i-1)+1):idxt(i),1:idxu(j))=...
                     repmat(tausq_curr(i,j),...
                            nseg_tcurr(i),...
                            nseg_ucurr(j));
                for k=1:nbeta
                     beta_conv((idxt(i-1)+1):idxt(i),1:idxu(j),k)=...
                        repmat(beta_curr(k,i,j),...
                            nseg_tcurr(i),...
                            nseg_ucurr(j),1);
                end                   
            else
                tausq_conv((idxt(i-1)+1):idxt(i),(idxu(j-1)+1):idxu(j))=...
                     repmat(tausq_curr(i,j),...
                            nseg_tcurr(i),...
                            nseg_ucurr(j));
                for k=1:nbeta
                     beta_conv((idxt(i-1)+1):idxt(i),(idxu(j-1)+1):idxu(j),k)=...
                        repmat(beta_curr(k,i,j),...
                            nseg_tcurr(i),...
                            nseg_ucurr(j),1);
                end                   
            end
        end 
    end       
 
    %max eigenval of symmetric transform
    result=zeros(1,nbeta+1);
    result(1)=real(max(eig(tausq_conv*tausq_conv')));
    for k=1:nbeta
        result(k+1)=real(max(eig(beta_conv(:,:,k)*beta_conv(:,:,k)')));
    end

end

